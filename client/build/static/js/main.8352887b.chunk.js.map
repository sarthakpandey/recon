{"version":3,"sources":["actions/authActions.js","actions/actionTypes.js","actions/profileActions.js","actions/userActions.js","actions/postActions.js","components/Elements/NavbarMenu.jsx","components/Elements/Navbar.jsx","components/Elements/Banner.jsx","components/Elements/Container.jsx","components/Home.jsx","utils/index.js","components/AddExperience.jsx","components/AddEducation.jsx","components/ViewProfile.jsx","components/CreatePost.jsx","components/Elements/CommentsList.jsx","components/Elements/PostsListItem.jsx","components/Elements/PostsList.jsx","components/Dashboard.jsx","components/Register.jsx","components/CreateProfile.jsx","components/Elements/User.jsx","components/UsersList.jsx","components/Elements/PeopleListItem.jsx","components/Elements/PeopleList.jsx","components/ManageConnections.jsx","components/HOC/Routing.jsx","components/App.jsx","reducers/authReducer.js","reducers/refreshReducer.js","reducers/index.js","index.js"],"names":["setUser","user","type","payload","loginUser","values","history","dispatch","a","axios","post","response","data","push","console","log","registerUser","email","password","getUser","get","getAllProfiles","createProfile","addExperience","addEducation","getProfileByUserId","id","sendFollowRequest","Axios","checkFriend","cancelRequest","delete","getSentRequestsList","getConnectedList","getReceivedRequestsList","acceptRequest","ignoreRequest","createPost","getAllPosts","getPostsFromConnections","likePost","put","unlikePost","addComment","text","removeComment","commentId","NavbarMenu","location","pathname","theme","mode","style","lineHeight","backgroundColor","selectedKeys","split","Item","onClick","key","withRouter","Form","create","props","useDispatch","useSelector","state","auth","useState","loggedIn","setLoggedIn","useEffect","onLogout","getFieldDecorator","form","Header","span","color","to","textAlign","_id","cursor","marginRight","fontSize","name","icon","layout","onSubmit","e","preventDefault","validateFields","err","formProps","message","success","justify","gutter","marginBottom","marginTop","rules","required","placeholder","Password","htmlType","margin","height","borderRadius","boxShadow","zIndex","bordered","fontFamily","fontWeight","letterSpacing","level","size","Container","children","Home","res","test","background","LOCATIONS","BRANCHES","DEGREES","FIELD_OF_STUDY","isCurrent","setIsCurrent","current","from","moment","toDate","_","pickBy","identity","resetFields","error","TextArea","rows","map","Option","value","disabled","onChange","target","checked","shape","showOther","setShowOther","degree","field","profile","setProfile","status","setStatus","match","params","userId","currentUser","friend","sent","fetchData","onFollowClick","onCancelClick","align","Title","width","warning","handle","bio","textTransform","githubusername","skills","skill","idx","padding","defaultActiveKey","Panel","header","collegeID","branch","education","i","school","experience","company","title","loading","onCloseModal","setRefresh","setLoading","CommentsList","dataSource","comments","renderItem","comment","onDeleteClick","avatar","author","content","twoToneColor","showComments","setShowComments","onLikeClick","onUnlikeClick","currentLiked","likes","length","sentiment","slice","formValues","PostsList","list","setList","refresh","Dashboard","modal","setModal","showModal","setShowModal","onModalClose","className","TabPane","tab","onCancel","closable","destroyOnClose","visible","footer","headStyle","borderTopLeftRadius","borderTopRightRadius","register_name","register_email","register_password","confirm_password","register_confirm_password","label","addonBefore","Text","display","justifyContent","alignItems","UsersList","profileList","setProfileList","bText","onItemClick","first","firstOnClick","second","secondOnClick","PeopleList","setButtonText","onAcceptClick","onIgnoreClick","onUnsendClick","ManageConnections","PrivateRoute","path","Component","component","render","Routing","exact","Register","CreateProfile","ViewProfile","App","fetchUser","INITIAL_STATE","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.8352887b.chunk.js","sourcesContent":["import * as ACTION_TYPE from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const setUser = user => {\r\n  return {\r\n    type: ACTION_TYPE.SET_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const loginUser = (values, history) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(\"/api/auth/login\", values);\r\n    await dispatch(setUser(response.data.user));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async dispatch => {\r\n  try {\r\n    await axios.get(\"/api/auth/logout\");\r\n    dispatch(setUser(null));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const registerUser = (values, history) => async dispatch => {\r\n  try {\r\n    const { email, password } = values;\r\n    await axios.post(\"/api/auth/register\", values);\r\n    await dispatch(loginUser({ email, password }));\r\n    history.push(\"/create-profile\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUser = async () => {\r\n  try {\r\n    const response = await axios.get(\"/api/auth/status\");\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","export const SET_USER = \"SET_USER\";\r\nexport const SET_REFRESH_POSTS = \"SET_REFRESH_POSTS\";\r\n","import axios from \"axios\";\r\n\r\nexport const getAllProfiles = async values => {\r\n  const response = await axios.get(\"/api/profile/all\");\r\n  return response;\r\n};\r\n\r\nexport const createProfile = async values => {\r\n  const response = await axios.post(\"/api/profile\", values);\r\n  return response;\r\n};\r\n\r\nexport const addExperience = async values => {\r\n  const response = await axios.post(\"/api/profile/experience\", values);\r\n  return response;\r\n};\r\n\r\nexport const addEducation = async values => {\r\n  const response = await axios.post(\"/api/profile/education\", values);\r\n  return response;\r\n};\r\n\r\nexport const getProfileByUserId = async id => {\r\n  const response = await axios.get(`/api/profile/user/${id}`);\r\n  return response;\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const getUsersList = async () => {\r\n  const response = await Axios.get(\"/api/user/list\");\r\n  return response;\r\n};\r\n\r\nexport const sendFollowRequest = async id => {\r\n  await Axios.post(`/api/user/send/${id}`);\r\n};\r\n\r\nexport const checkFriend = async id => {\r\n  const response = await Axios.get(`/api/user/check/${id}`);\r\n  return response;\r\n};\r\n\r\nexport const cancelRequest = async id => {\r\n  await Axios.delete(`/api/user/unsend/${id}`);\r\n};\r\n\r\nexport const getSentRequestsList = async () => {\r\n  const response = await Axios.get(\"/api/user/sent\");\r\n  return response;\r\n};\r\n\r\nexport const getConnectedList = async () => {\r\n  const response = await Axios.get(\"/api/user/people\");\r\n  return response;\r\n};\r\n\r\nexport const getReceivedRequestsList = async () => {\r\n  const response = await Axios.get(\"/api/user/recieved\");\r\n  return response;\r\n};\r\n\r\nexport const acceptRequest = async id => {\r\n  await Axios.post(`/api/user/accept/${id}`);\r\n};\r\n\r\nexport const ignoreRequest = async id => {\r\n  await Axios.delete(`/api/user/ignore/${id}`);\r\n};\r\n","import Axios from \"axios\";\r\nimport * as ACTION_TYPE from \"./actionTypes\";\r\n\r\nexport const refreshPosts = value => dispatch => {\r\n  dispatch({\r\n    type: ACTION_TYPE.SET_REFRESH_POSTS,\r\n    payload: value\r\n  });\r\n};\r\n\r\nexport const createPost = async data => {\r\n  await Axios.post(\"/api/post\", data);\r\n};\r\n\r\nexport const getAllPosts = async () => {\r\n  const response = await Axios.get(\"/api/post\");\r\n  return response;\r\n};\r\n\r\nexport const getPostsFromConnections = async () => {\r\n  const response = await Axios.get(\"/api/user/posts\");\r\n  return response;\r\n};\r\n\r\nexport const likePost = async id => {\r\n  await Axios.put(`/api/post/like/${id}`);\r\n};\r\n\r\nexport const unlikePost = async id => {\r\n  await Axios.put(`/api/post/unlike/${id}`);\r\n};\r\n\r\nexport const addComment = async (id, text) => {\r\n  await Axios.post(`/api/post/comment/${id}`, { text });\r\n};\r\n\r\nexport const removeComment = async (id, commentId) => {\r\n  await Axios.delete(`/api/post/comment/${id}/${commentId}`);\r\n};\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport \"./NavbarMenu.css\";\r\n\r\nconst NavbarMenu = ({ history }) => {\r\n  console.log(history.location.pathname);\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      style={{ lineHeight: \"64px\", backgroundColor: \"#313131\" }}\r\n      selectedKeys={[history.location.pathname.split(\"/\")[1]]}\r\n    >\r\n      <Menu.Item\r\n        onClick={() => {\r\n          history.push(\"/dashboard\");\r\n        }}\r\n        key=\"dashboard\"\r\n      >\r\n        Dashboard\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        onClick={() => {\r\n          history.push(\"/users\");\r\n        }}\r\n        key=\"users\"\r\n      >\r\n        Users\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        onClick={() => {\r\n          history.push(\"/connections\");\r\n        }}\r\n        key=\"connections\"\r\n      >\r\n        Manage Connections\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NavbarMenu;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Row, Col, Input, Button, Form, message, Icon } from \"antd\";\r\nimport { loginUser, logoutUser } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport NavbarMenu from \"./NavbarMenu\";\r\n\r\nconst Navbar = props => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.auth.user);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    if (user) {\r\n      setLoggedIn(true);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const onLogin = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields(async (err, formProps) => {\r\n      if (!err) {\r\n        await dispatch(loginUser(formProps, props.history));\r\n        message.success(\"Logged in\");\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onLogout = async () => {\r\n    await dispatch(logoutUser());\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  const onUserClick = () => {\r\n    props.history.push(`/profile/${user._id}`);\r\n  };\r\n\r\n  const { getFieldDecorator } = props.form;\r\n  return (\r\n    <Layout.Header style={{ backgroundColor: \"#313131\" }}>\r\n      <Row type=\"flex\">\r\n        <Col span={3}>\r\n          <h1 style={{ color: \"white\" }}>\r\n            <Link to=\"/dashboard\">RECON</Link>\r\n          </h1>\r\n        </Col>\r\n\r\n        {loggedIn ? (\r\n          <Col span={21}>\r\n            <Row>\r\n              <Col span={14}>\r\n                <NavbarMenu history={props.history} />\r\n              </Col>\r\n              <Col span={10}>\r\n                <div style={{ textAlign: \"right\", color: \"white\" }}>\r\n                  <span onClick={onUserClick} style={{ cursor: \"pointer\" }}>\r\n                    <span style={{ marginRight: 10, fontSize: 16 }}>\r\n                      <Icon type=\"user\" />\r\n                    </span>\r\n                    <span style={{ marginRight: 10 }}>\r\n                      {user ? user.name : null}\r\n                    </span>\r\n                  </span>\r\n\r\n                  <Button icon=\"logout\" type=\"primary\" onClick={onLogout}>\r\n                    Logout\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        ) : (\r\n          <Col span={21}>\r\n            <Form layout=\"inline\" onSubmit={onLogin}>\r\n              <Row\r\n                type=\"flex\"\r\n                justify=\"end\"\r\n                gutter={12}\r\n                style={{ marginBottom: 10 }}\r\n              >\r\n                <Col>\r\n                  <Form.Item\r\n                    style={{ marginRight: 0, marginTop: 10, marginBottom: 10 }}\r\n                  >\r\n                    {getFieldDecorator(\"email\", {\r\n                      rules: [{ required: true, message: \"Email is required\" }]\r\n                    })(<Input placeholder=\"Email\" type=\"email\" />)}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Item\r\n                    style={{ marginRight: 0, marginTop: 10, marginBottom: 10 }}\r\n                  >\r\n                    {getFieldDecorator(\"password\", {\r\n                      rules: [\r\n                        { required: true, message: \"Password is required\" }\r\n                      ]\r\n                    })(<Input.Password placeholder=\"Password\" />)}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col style={{ textAlign: \"right\" }}>\r\n                  <Form.Item\r\n                    style={{ marginRight: 0, marginTop: 10, marginBottom: 10 }}\r\n                  >\r\n                    <Button htmlType=\"submit\" type=\"primary\">\r\n                      Login\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Form.create()(Navbar));\r\n","import React from \"react\";\r\nimport { Card, Typography, Button } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Banner = props => {\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{\r\n          margin: \"20px 20px\",\r\n          height: \"100%\",\r\n          backgroundColor: \"#414141\",\r\n          color: \"white\",\r\n          borderRadius: 10,\r\n          boxShadow: \"15px 15px 5px 0px rgba(0,0,0,0.75)\",\r\n          zIndex: 2\r\n        }}\r\n        bordered={false}\r\n      >\r\n        <p\r\n          style={{\r\n            fontSize: 52,\r\n            fontFamily: \"Rubik\",\r\n            fontWeight: \"lighter\",\r\n            letterSpacing: \".2rem\",\r\n            marginBottom: 10\r\n          }}\r\n        >\r\n          RECON\r\n        </p>\r\n        <p\r\n          style={{\r\n            fontFamily: \"Rubik\",\r\n            letterSpacing: \".1rem\",\r\n            fontSize: 28,\r\n            marginBottom: 10\r\n          }}\r\n          level={3}\r\n        >\r\n          Connecting students\r\n        </p>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          style={{ marginTop: 20 }}\r\n          onClick={() => props.history.push(\"/register\")}\r\n        >\r\n          Register Now\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Banner);\r\n","import React from \"react\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div style={{ margin: \"25px 15%\" }}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Navbar from \"./Elements/Navbar\";\r\nimport Banner from \"./Elements/Banner\";\r\nimport Container from \"./Elements/Container\";\r\nimport Axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    const test = async () => {\r\n      const res = await Axios.get(\"/api/sentiment\");\r\n      console.log(res);\r\n    };\r\n    test();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Layout style={{ background: \"none\" }}>\r\n        <Navbar />\r\n        <Banner />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const LOCATIONS = [\r\n  \"Andaman and Nicobar Islands(Port Blair)\",\r\n  \"Chandigarh(Chandigarh)\",\r\n  \"Dadra and Nagar Haveli(Silvassa)\",\r\n  \"Daman ans Diu(Daman)\",\r\n  \"The Government of NCT of Delhi(Delhi)\",\r\n  \"Lakshadweep(Kavaratti)\",\r\n  \"Puducherry(Puducherry)\",\r\n  \"Andhra Pradesh(Hyderabad)\",\r\n  \"Arunachal Pradesh(Itanagar)\",\r\n  \"Assam(Dispur)\",\r\n  \"Bihar(Patna)\",\r\n  \"Chhattisgarh(Raipur)\",\r\n  \"Goa(Panaji)\",\r\n  \"Gujarat(Gandhinagar)\",\r\n  \"Haryana(Chandigarh)\",\r\n  \"Himachal Pradesh(Shimla)\",\r\n  \"Jammu and Kashmir(Srinagar)\",\r\n  \"Jharkhand(Ranchi)\",\r\n  \"Karnataka(Bangalore)\",\r\n  \"Kerala(Thiruvananthapuram)\",\r\n  \"Madhya Pradesh(Bhopal)\",\r\n  \"Maharashtra(Mumbai)\",\r\n  \"Manipur(Imphal)\",\r\n  \"Meghalaya(Shillong)\",\r\n  \"Mizoram(Aizawl)\",\r\n  \"Nagaland(Kohima)\",\r\n  \"Odisha(Bhubaneshwar)\",\r\n  \"Punjab(Chandigarh)\",\r\n  \"Rajasthan(Jaipur)\",\r\n  \"Sikkim(Gangtok)\",\r\n  \"Tamil Nadu(Chennai)\",\r\n  \"Telangana(Hyderabad)\",\r\n  \"Tripura(Agartala)\",\r\n  \"Uttarakhand(Dehradun)\",\r\n  \"Uttar Pradesh(Lucknow)\",\r\n  \"West Bengal(Kolkata)\"\r\n];\r\n\r\nexport const BRANCHES = [\r\n  \"ECE\",\r\n  \"COE\",\r\n  \"ME\",\r\n  \"EE\",\r\n  \"PIE\",\r\n  \"CE\",\r\n  \"ENE\",\r\n  \"PCT\",\r\n  \"IT\",\r\n  \"BT\",\r\n  \"SE\",\r\n  \"EEE\",\r\n  \"MAM\",\r\n  \"EP\",\r\n  \"MC\"\r\n];\r\n\r\nexport const DEGREES = [\r\n  \"Some school\",\r\n  \"High school\",\r\n  \"Undergraduate\",\r\n  \"Postgraduate\",\r\n  \"Other\"\r\n];\r\n\r\nexport const FIELD_OF_STUDY = [\"Technical\", \"Non-technical\"];\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { LOCATIONS } from \"../utils\";\r\nimport moment from \"moment\";\r\nimport { addExperience } from \"../actions\";\r\n\r\nconst AddExperience = ({ form }) => {\r\n  const [isCurrent, setIsCurrent] = useState(false);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFields(async (err, formProps) => {\r\n      if (!err) {\r\n        let data = {\r\n          ...formProps,\r\n          current: isCurrent,\r\n          from: moment(formProps.from).toDate(),\r\n          to: isCurrent ? null : moment(formProps.to).toDate()\r\n        };\r\n        data = _.pickBy(data, _.identity);\r\n        try {\r\n          await addExperience(data);\r\n          message.success(\"Work Experience updated successfully\");\r\n          form.resetFields();\r\n        } catch (err) {\r\n          return message.error(\"Internal Server Error\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"title\", { rules: [{ required: true }] })(\r\n          <Input size=\"large\" placeholder=\"Enter title\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"company\", { rules: [{ required: true }] })(\r\n          <Input size=\"large\" placeholder=\"Enter Company\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"description\")(\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            placeholder=\"Enter Description\"\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"location\")(\r\n          <Select size=\"large\" placeholder=\"Select the location\">\r\n            {LOCATIONS.map(location => (\r\n              <Select.Option key={location} value={location}>\r\n                {location}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"from\", { rules: [{ required: true }] })(\r\n              <DatePicker size=\"large\" placeholder=\"From\" />\r\n            )}\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            {getFieldDecorator(\"to\")(\r\n              <DatePicker size=\"large\" placeholder=\"To\" disabled={isCurrent} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Checkbox\r\n              onChange={e => {\r\n                setIsCurrent(e.target.checked);\r\n              }}\r\n            />{\" \"}\r\n            Current\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Button htmlType=\"submit\" type=\"primary\" shape=\"round\" size=\"large\">\r\n        Add\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Form.create()(AddExperience);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { DEGREES, FIELD_OF_STUDY } from \"../utils\";\r\nimport moment from \"moment\";\r\nimport { addEducation } from \"../actions\";\r\n\r\nconst AddEducation = ({ form }) => {\r\n  const [isCurrent, setIsCurrent] = useState(false);\r\n  const [showOther, setShowOther] = useState(false);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFields(async (err, formProps) => {\r\n      if (!err) {\r\n        let data = {\r\n          ...formProps,\r\n          current: isCurrent,\r\n          from: moment(formProps.from).toDate(),\r\n          to: isCurrent ? null : moment(formProps.to).toDate()\r\n        };\r\n        data = _.pickBy(data, _.identity);\r\n        try {\r\n          await addEducation(data);\r\n          message.success(\"Education updated successfully\");\r\n          form.resetFields();\r\n        } catch (err) {\r\n          return message.error(\"Internal Server Error\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDegreeSelect = value => {\r\n    if (value === \"Other\") {\r\n      setShowOther(true);\r\n    }\r\n  };\r\n\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"school\", { rules: [{ required: true }] })(\r\n          <Input size=\"large\" placeholder=\"Enter School Name\" />\r\n        )}\r\n      </Form.Item>\r\n      {showOther ? (\r\n        <Form.Item>\r\n          {getFieldDecorator(\"degree\", { rules: [{ required: true }] })(\r\n            <Input size=\"large\" placeholder=\"Enter degree\" />\r\n          )}\r\n        </Form.Item>\r\n      ) : (\r\n        <Form.Item>\r\n          {getFieldDecorator(\"degree\", { rules: [{ required: true }] })(\r\n            <Select\r\n              size=\"large\"\r\n              placeholder=\"Enter degree\"\r\n              onChange={onDegreeSelect}\r\n            >\r\n              {DEGREES.map(degree => (\r\n                <Select.Option key={degree} value={degree}>\r\n                  {degree}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n      )}\r\n      <Form.Item>\r\n        {getFieldDecorator(\"fieldofstudy\", { rules: [{ required: true }] })(\r\n          <Select size=\"large\" placeholder=\"Enter Field of study\">\r\n            {FIELD_OF_STUDY.map(field => (\r\n              <Select.Option key={field} value={field}>\r\n                {field}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"description\")(\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            placeholder=\"Enter Description\"\r\n            rows={5}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Row gutter={16}>\r\n        <Col span={12}>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"from\", { rules: [{ required: true }] })(\r\n              <DatePicker size=\"large\" placeholder=\"From\" />\r\n            )}\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            {getFieldDecorator(\"to\")(\r\n              <DatePicker size=\"large\" placeholder=\"To\" disabled={isCurrent} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Checkbox\r\n              onChange={e => {\r\n                setIsCurrent(e.target.checked);\r\n              }}\r\n            />{\" \"}\r\n            Current\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Button htmlType=\"submit\" type=\"primary\" shape=\"round\" size=\"large\">\r\n        Add\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Form.create()(AddEducation);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Typography,\r\n  Card,\r\n  Button,\r\n  message,\r\n  Icon,\r\n  Badge,\r\n  Tag,\r\n  Divider,\r\n  Collapse\r\n} from \"antd\";\r\nimport Container from \"./Elements/Container\";\r\nimport {\r\n  getProfileByUserId,\r\n  sendFollowRequest,\r\n  checkFriend,\r\n  cancelRequest\r\n} from \"../actions\";\r\n\r\nconst ViewProfile = props => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const id = props.match.params.userId || props.id;\r\n\r\n  const currentUser = id === props.user._id ? true : false;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = await getProfileByUserId(id);\r\n      setProfile(response.data);\r\n      if (!currentUser) {\r\n        response = await checkFriend(id);\r\n        let status = null;\r\n        if (response.data.friend) {\r\n          status = \"friend\";\r\n        } else if (response.data.sent) {\r\n          status = \"sent\";\r\n        }\r\n        if (status) {\r\n          setStatus(status);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id, currentUser]);\r\n\r\n  const onFollowClick = async () => {\r\n    try {\r\n      await sendFollowRequest(id);\r\n      message.success(\"Request sent successfully\");\r\n      setStatus(\"sent\");\r\n    } catch (err) {\r\n      message.error(\"Could not send request. Please try again\");\r\n    }\r\n  };\r\n\r\n  const onCancelClick = async () => {\r\n    try {\r\n      await cancelRequest(id);\r\n      message.success(\"Request cancelled successfully\");\r\n      setStatus(null);\r\n    } catch (err) {\r\n      message.error(\"Could not cancel request. Please try again\");\r\n    }\r\n  };\r\n\r\n  const onUnfollowClick = () => {\r\n    message.warning(\"Once a friend, always a friend\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {!profile ? (\r\n        <Card loading />\r\n      ) : (\r\n        <Card>\r\n          <Row type=\"flex\" align=\"middle\">\r\n            <Col span={10}>\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\"\r\n                }}\r\n              >\r\n                <Avatar icon=\"user\" size={160} />\r\n              </div>\r\n            </Col>\r\n            <Col span={14}>\r\n              <Row type=\"flex\" justify=\"space-between\">\r\n                <Col span={16}>\r\n                  <Typography.Title>{profile.user.name}</Typography.Title>\r\n                </Col>\r\n                <Col span={6}>\r\n                  {!currentUser && !status ? (\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      style={{ width: \"100%\" }}\r\n                      onClick={onFollowClick}\r\n                    >\r\n                      Follow\r\n                    </Button>\r\n                  ) : null}\r\n                  {!currentUser && status ? (\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      style={{ width: \"100%\" }}\r\n                      onClick={\r\n                        status === \"sent\" ? onCancelClick : onUnfollowClick\r\n                      }\r\n                    >\r\n                      {status === \"sent\" ? \"Pending\" : \"Following\"}\r\n                    </Button>\r\n                  ) : null}\r\n                </Col>\r\n              </Row>\r\n              <div style={{ fontSize: 20 }}>@{profile.handle}</div>\r\n              <Divider />\r\n              <div>{profile.bio}</div>\r\n            </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"space-between\" style={{ marginTop: 30 }}>\r\n            <Col span={11}>\r\n              <Badge\r\n                status=\"processing\"\r\n                text={\r\n                  <span style={{ fontSize: 20 }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>Status: </span>\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      {profile.status}\r\n                    </span>\r\n                  </span>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={11}>\r\n              {profile.githubusername ? (\r\n                <Badge\r\n                  status=\"processing\"\r\n                  text={\r\n                    <span style={{ fontSize: 20 }}>\r\n                      <span style={{ fontWeight: \"bold\" }}>\r\n                        <Icon type=\"github\" />\r\n                      </span>\r\n                      <span>{profile.githubusername}</span>\r\n                    </span>\r\n                  }\r\n                />\r\n              ) : null}\r\n            </Col>\r\n            <Col span={24} style={{ marginTop: 20, marginBottom: 20 }}>\r\n              <Badge\r\n                status=\"processing\"\r\n                text={\r\n                  <span style={{ fontSize: 20 }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>Skills: </span>\r\n                    <span>\r\n                      {profile.skills.map((skill, idx) => (\r\n                        <Tag\r\n                          color=\"blue\"\r\n                          style={{\r\n                            fontSize: 16,\r\n                            padding: 7,\r\n                            borderRadius: 25\r\n                          }}\r\n                          key={idx}\r\n                        >\r\n                          {skill}\r\n                        </Tag>\r\n                      ))}\r\n                    </span>\r\n                  </span>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={24}>\r\n              <Badge\r\n                status=\"processing\"\r\n                text={\r\n                  <span style={{ fontSize: 20 }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>From: </span>\r\n                    <span>{profile.location}</span>\r\n                  </span>\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={24} style={{ marginTop: 30 }}>\r\n              <Collapse defaultActiveKey={[1, 2, 3]}>\r\n                <Collapse.Panel key=\"1\" header={<div>More Details</div>}>\r\n                  <div>\r\n                    <Badge\r\n                      status=\"processing\"\r\n                      text={\r\n                        <span style={{ fontSize: 16 }}>\r\n                          <span style={{ fontWeight: \"bold\" }}>College: </span>\r\n                          <span>{profile.collegeID}</span>\r\n                        </span>\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Badge\r\n                      status=\"processing\"\r\n                      text={\r\n                        <span style={{ fontSize: 16 }}>\r\n                          <span style={{ fontWeight: \"bold\" }}>Branch: </span>\r\n                          <span>{profile.branch}</span>\r\n                        </span>\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Collapse.Panel>\r\n                <Collapse.Panel key=\"2\" header={<div>Academic Details</div>}>\r\n                  {profile.education.map((education, i) => (\r\n                    <Card key={i}>\r\n                      <div>\r\n                        <Badge\r\n                          status=\"processing\"\r\n                          text={\r\n                            <span style={{ fontSize: 16 }}>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                School:{\" \"}\r\n                              </span>\r\n                              <span>{education.school}</span>\r\n                            </span>\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Badge\r\n                          status=\"processing\"\r\n                          text={\r\n                            <span style={{ fontSize: 16 }}>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                Degree:{\" \"}\r\n                              </span>\r\n                              <span>{education.degree}</span>\r\n                            </span>\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Card>\r\n                  ))}\r\n                </Collapse.Panel>\r\n                <Collapse.Panel\r\n                  key=\"3\"\r\n                  header={<div>Work Experience Details</div>}\r\n                >\r\n                  {profile.experience.map((experience, i) => (\r\n                    <Card key={i}>\r\n                      <div>\r\n                        <Badge\r\n                          status=\"processing\"\r\n                          text={\r\n                            <span style={{ fontSize: 16 }}>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                Company:{\" \"}\r\n                              </span>\r\n                              <span>{experience.company}</span>\r\n                            </span>\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Badge\r\n                          status=\"processing\"\r\n                          text={\r\n                            <span style={{ fontSize: 16 }}>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                Title:{\" \"}\r\n                              </span>\r\n                              <span>{experience.title}</span>\r\n                            </span>\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Card>\r\n                  ))}\r\n                </Collapse.Panel>\r\n              </Collapse>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(ViewProfile);\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, message, Spin, Card } from \"antd\";\r\nimport { createPost, refreshPosts } from \"../actions\";\r\n\r\nconst CreatePost = ({ form, onCloseModal, setRefresh }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFields(async (err, formProps) => {\r\n      if (!err) {\r\n        try {\r\n          setLoading(true);\r\n          await createPost(formProps);\r\n          message.success(\"Post created successfully\");\r\n          setRefresh(true);\r\n          setLoading(false);\r\n          onCloseModal();\r\n        } catch (err) {\r\n          console.log(err);\r\n          message.error(\"Something went wrong\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Card loading={loading}>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"text\")(\r\n            <Input.TextArea\r\n              size=\"large\"\r\n              placeholder=\"Create your post\"\r\n              rows={5}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Button htmlType=\"submit\" type=\"primary\" shape=\"round\" size=\"large\">\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Form.create()(CreatePost);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  Comment,\r\n  Avatar,\r\n  Divider,\r\n  Row,\r\n  Button,\r\n  Icon,\r\n  Col,\r\n  message\r\n} from \"antd\";\r\nimport { removeComment } from \"../../actions\";\r\n\r\nconst CommentsList = ({ post, setRefresh }) => {\r\n  const renderComment = comment => {\r\n    const onDeleteClick = async () => {\r\n      try {\r\n        await removeComment(post._id, comment._id);\r\n        setRefresh(true);\r\n      } catch (err) {\r\n        message.error(\"Something went wrong\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Comment\r\n        avatar={<Avatar icon=\"user\" />}\r\n        author={comment.name}\r\n        content={\r\n          <Row>\r\n            <Col span={23}>\r\n              <p>{comment.text}</p>\r\n            </Col>\r\n            <Col span={1}>\r\n              <Icon\r\n                type=\"delete\"\r\n                theme=\"twoTone\"\r\n                twoToneColor=\"#ff0000\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={onDeleteClick}\r\n              />\r\n            </Col>\r\n            <Divider style={{ margin: 0 }} />\r\n          </Row>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return <List dataSource={post.comments} renderItem={renderComment} />;\r\n};\r\n\r\nexport default CommentsList;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Icon,\r\n  Button,\r\n  Divider,\r\n  message,\r\n  Input,\r\n  Comment,\r\n  Avatar,\r\n  Form\r\n} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { likePost, unlikePost, addComment } from \"../../actions\";\r\nimport CommentsList from \"./CommentsList\";\r\n\r\nconst PostsListItem = ({ post, history, setRefresh, form }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const onItemClick = () => {\r\n    return history.push(`/profile/${post.user}`);\r\n  };\r\n\r\n  const onLikeClick = async () => {\r\n    try {\r\n      await likePost(post._id);\r\n      setRefresh(true);\r\n    } catch (err) {\r\n      message.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const onUnlikeClick = async () => {\r\n    try {\r\n      await unlikePost(post._id);\r\n      setRefresh(true);\r\n    } catch (err) {\r\n      message.error(\"Something went terribly wrong\");\r\n    }\r\n  };\r\n\r\n  const onCommentsClick = () => {\r\n    setShowComments(true);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFields(async (err, formValues) => {\r\n      if (!err) {\r\n        try {\r\n          const { text } = formValues;\r\n          await addComment(post._id, text);\r\n          setRefresh(true);\r\n        } catch (err) {\r\n          message.error(\"Something went wrong\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={{ width: \"100%\" }}\r\n      title={\r\n        <Row>\r\n          <Col span={12} onClick={onItemClick}>\r\n            <span style={{ marginRight: 15 }}>\r\n              <Icon type=\"user\" style={{ fontSize: 14 }} />\r\n            </span>\r\n            {post.name}\r\n          </Col>\r\n        </Row>\r\n      }\r\n    >\r\n      <div>\r\n        <div style={{ fontSize: 24 }}>{post.text}</div>\r\n        <Divider />\r\n        <div style={{ fontSize: 16 }}>\r\n          <span style={{ marginRight: 20 }}>\r\n            <span\r\n              style={{ marginRight: 5, cursor: \"pointer\" }}\r\n              onClick={post.currentLiked ? onUnlikeClick : onLikeClick}\r\n            >\r\n              <Icon\r\n                theme={post.currentLiked ? \"filled\" : \"outlined\"}\r\n                style={{ color: \"#1890FF\" }}\r\n                type=\"like\"\r\n              />\r\n            </span>\r\n            <span>{post.likes.length} Likes</span>\r\n          </span>\r\n          <span onClick={onCommentsClick} style={{ cursor: \"pointer\" }}>\r\n            <span style={{ marginRight: 5 }}>\r\n              <Icon type=\"pic-left\" />\r\n            </span>\r\n            <span>{post.comments.length} comments</span>\r\n          </span>\r\n          <span>{post.sentiment.slice(2, -2)}</span>\r\n        </div>\r\n      </div>\r\n      {showComments ? (\r\n        <div>\r\n          <CommentsList post={post} setRefresh={setRefresh} />\r\n          <Comment\r\n            avatar={<Avatar icon=\"user\" />}\r\n            author={user.name}\r\n            content={\r\n              <Form onSubmit={onSubmit}>\r\n                <Form.Item>\r\n                  {form.getFieldDecorator(\"text\", {\r\n                    rules: [{ required: true }]\r\n                  })(<Input.TextArea placeholder=\"Add comment...\" />)}\r\n                </Form.Item>\r\n                <Button htmlType=\"submit\" type=\"primary\">\r\n                  Add Comment\r\n                </Button>\r\n              </Form>\r\n            }\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(Form.create()(PostsListItem));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, List } from \"antd\";\r\nimport { getAllPosts, getPostsFromConnections } from \"../../actions\";\r\nimport PostsListItem from \"./PostsListItem\";\r\n\r\nconst PostsList = props => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [list, setList] = useState([]);\r\n  const [refresh, setRefresh] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = null;\r\n      try {\r\n        switch (props.type) {\r\n          case \"all\":\r\n            response = await getAllPosts();\r\n            setList(response.data);\r\n            break;\r\n          case \"conn\":\r\n            response = await getPostsFromConnections();\r\n            setList(response.data);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(\"Something went wrong\");\r\n      }\r\n    };\r\n    if (refresh) {\r\n      fetchData();\r\n      setRefresh(false);\r\n    } else if (props.refresh) {\r\n      props.setRefresh(false);\r\n      fetchData();\r\n    }\r\n  }, [props.type, refresh, props.refresh]);\r\n\r\n  return (\r\n    <Card loading={loading}>\r\n      <List>\r\n        {list.map(post => (\r\n          <List.Item key={post._id}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <PostsListItem post={post} setRefresh={setRefresh} />\r\n            </div>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React, { useState } from \"react\";\r\nimport Container from \"./Elements/Container\";\r\nimport { Card, Button, Row, Col, Modal, Tabs } from \"antd\";\r\nimport AddExperience from \"./AddExperience\";\r\nimport AddEducation from \"./AddEducation\";\r\nimport ViewProfile from \"./ViewProfile\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport PostsList from \"./Elements/PostsList\";\r\n\r\nconst Dashboard = ({ user }) => {\r\n  const [modal, setModal] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const onModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onExperienceClick = () => {\r\n    setModal(\"experience\");\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onEducationClick = () => {\r\n    setModal(\"education\");\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCreateClick = () => {\r\n    setModal(\"create\");\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Container>\r\n        <Card>\r\n          <Row gutter={48}>\r\n            <Col span={12}>\r\n              <Button type=\"primary\" size=\"large\" onClick={onCreateClick}>\r\n                Create Post\r\n              </Button>\r\n            </Col>\r\n            <Col span={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  style={{ width: \"100%\" }}\r\n                  onClick={onExperienceClick}\r\n                >\r\n                  Add Work Experience\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col span={6}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  style={{ width: \"100%\" }}\r\n                  onClick={onEducationClick}\r\n                >\r\n                  Add Education\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: 20 }}>\r\n            <Tabs>\r\n              <Tabs.TabPane key=\"conn\" tab=\"Posts from connections\">\r\n                <PostsList\r\n                  type=\"conn\"\r\n                  refresh={refresh}\r\n                  setRefresh={setRefresh}\r\n                />\r\n              </Tabs.TabPane>\r\n              <Tabs.TabPane key=\"all\" tab=\"All posts\">\r\n                <PostsList\r\n                  type=\"all\"\r\n                  refresh={refresh}\r\n                  setRefresh={setRefresh}\r\n                />\r\n              </Tabs.TabPane>\r\n            </Tabs>\r\n          </Row>\r\n        </Card>\r\n\r\n        <Modal\r\n          onCancel={onModalClose}\r\n          closable\r\n          destroyOnClose\r\n          visible={showModal}\r\n          footer={null}\r\n          title={\r\n            modal === \"experience\"\r\n              ? \"Add Work Experience\"\r\n              : modal === \"create\"\r\n              ? \"Create A Post\"\r\n              : \"Add Education Details\"\r\n          }\r\n        >\r\n          {modal === \"experience\" ? (\r\n            <AddExperience />\r\n          ) : modal === \"create\" ? (\r\n            <CreatePost onCloseModal={onModalClose} setRefresh={setRefresh} />\r\n          ) : (\r\n            <AddEducation />\r\n          )}\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Navbar from \"./Elements/Navbar\";\r\nimport { Card, Form, Input, Row, Col, Button, message } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../actions\";\r\n\r\nconst Register = props => {\r\n  const dispatch = useDispatch();\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFields(async (err, formProps) => {\r\n      const {\r\n        register_name: name,\r\n        register_email: email,\r\n        register_password: password,\r\n        register_confirm_password: confirm_password\r\n      } = formProps;\r\n      if (!err) {\r\n        if (password === confirm_password) {\r\n          await dispatch(\r\n            registerUser({ name, email, password }, props.history)\r\n          );\r\n          message.success(\"Registered successfully\");\r\n        } else {\r\n          return message.error(\"Passwords do not match\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getFieldDecorator } = props.form;\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Row type=\"flex\" justify=\"center\">\r\n        <Col span={8}>\r\n          <Card\r\n            title={\r\n              <h1 style={{ color: \"white\", margin: \"auto\" }}>Register now</h1>\r\n            }\r\n            style={{ margin: \"20px 20px\", borderRadius: 25 }}\r\n            headStyle={{\r\n              borderTopLeftRadius: 25,\r\n              borderTopRightRadius: 25,\r\n              fontWeight: 700,\r\n              backgroundColor: \"#303F9F\",\r\n              textAlign: \"center\"\r\n            }}\r\n            type=\"inner\"\r\n          >\r\n            <Form onSubmit={onSubmit}>\r\n              <Form.Item label=\"Name\">\r\n                {getFieldDecorator(\"register_name\", {\r\n                  rules: [{ required: true, message: \"Name is required\" }]\r\n                })(<Input size=\"large\" />)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Email Address\">\r\n                {getFieldDecorator(\"register_email\", {\r\n                  rules: [{ required: true, message: \"Email is required\" }]\r\n                })(<Input size=\"large\" type=\"email\" />)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Password\">\r\n                {getFieldDecorator(\"register_password\", {\r\n                  rules: [{ required: true, message: \"Password is required\" }]\r\n                })(<Input.Password size=\"large\" />)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Confirm Password\">\r\n                {getFieldDecorator(\"register_confirm_password\", {\r\n                  rules: [{ required: true, message: \"Passwords do not match\" }]\r\n                })(<Input size=\"large\" type=\"password\" />)}\r\n              </Form.Item>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                size=\"large\"\r\n                style={{ backgroundColor: \"#303F9F\" }}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form.create()(Register);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Avatar,\r\n  Typography,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  message,\r\n  Icon\r\n} from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Container from \"./Elements/Container\";\r\nimport { BRANCHES, LOCATIONS } from \"../utils\";\r\nimport { createProfile } from \"../actions\";\r\n\r\nconst CreateProfile = ({ form, history }) => {\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFields(async (err, formProps) => {\r\n      if (!err) {\r\n        const data = _.pickBy(formProps, _.identity);\r\n        try {\r\n          await createProfile(data);\r\n          message.success(\"Profile updated successfully\");\r\n          return history.push(\"/dashboard\");\r\n        } catch (err) {\r\n          if (err.response.status === 400) {\r\n            message.error(\"Username already taken\");\r\n          } else {\r\n            message.error(\"Internal server error\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Form onSubmit={onSubmit}>\r\n          <Row type=\"flex\" align=\"middle\">\r\n            <Col span={10}>\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\"\r\n                }}\r\n              >\r\n                <Avatar icon=\"user\" size={160} />\r\n              </div>\r\n            </Col>\r\n            <Col span={14}>\r\n              <Typography.Title>{user.name}</Typography.Title>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"bio\")(\r\n                  <Input.TextArea placeholder=\"Add bio...\" rows={5} />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"handle\", {\r\n                  rules: [{ required: true, message: \"Username is required\" }]\r\n                })(\r\n                  <Input\r\n                    addonBefore={<Icon type=\"user\" />}\r\n                    size=\"large\"\r\n                    placeholder=\"Set username/handle\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={11}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"status\", {\r\n                  rules: [{ required: true, message: \"Status is required\" }]\r\n                })(\r\n                  <Select size=\"large\" placeholder=\"Select a status\">\r\n                    <Select.Option key=\"student\" value=\"student\">\r\n                      Student\r\n                    </Select.Option>\r\n                    <Select.Option key=\"teacher\" value=\"teacher\">\r\n                      Teacher\r\n                    </Select.Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"githubusername\")(\r\n                  <Input\r\n                    addonBefore={<Icon type=\"github\" />}\r\n                    size=\"large\"\r\n                    placeholder=\"Enter your github username\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"skills\", {\r\n                  rules: [\r\n                    { required: true, message: \"Atleast one skill is required\" }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    size=\"large\"\r\n                    placeholder=\"Add skills (separated by commas) \"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"location\")(\r\n                  <Select size=\"large\" placeholder=\"Select your location\">\r\n                    {LOCATIONS.map(location => (\r\n                      <Select.Option key={location} value={location}>\r\n                        {location}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Card\r\n                title={\r\n                  <div style={{ fontSize: 20 }}>\r\n                    <Icon type=\"book\" style={{ marginRight: 15 }} />\r\n                    <Typography.Text>Academic Details</Typography.Text>\r\n                  </div>\r\n                }\r\n              >\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"collegeID\")(\r\n                    <Input size=\"large\" placeholder=\"Enter your College ID\" />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"branch\")(\r\n                    <Select size=\"large\" placeholder=\"Select your Branch\">\r\n                      {BRANCHES.map(branch => (\r\n                        <Select.Option key={branch} value={branch}>\r\n                          {branch}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"yearOfJoin\")(\r\n                    <Input\r\n                      size=\"large\"\r\n                      placeholder=\"Enter your Year of Joining (YYYY)\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Card>\r\n            </Col>\r\n            <Button\r\n              htmlType=\"submit\"\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n              style={{ marginTop: 25 }}\r\n            >\r\n              Create Profile\r\n            </Button>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Form.create()(CreateProfile));\r\n","import React from \"react\";\r\nimport { Card, Row, Col, Icon, Typography, Button } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst User = ({ profile, history }) => {\r\n  const onUserClick = () => {\r\n    history.push(`/profile/${profile.user._id}`);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\", cursor: \"pointer\" }} onClick={onUserClick}>\r\n      <Row type=\"flex\" align=\"middle\">\r\n        <Col\r\n          span={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Icon type=\"user\" style={{ fontSize: 24 }} />\r\n        </Col>\r\n        <Col span={20}>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={10}>\r\n              <Typography.Title style={{ fontSize: 24 }}>\r\n                {profile.user.name}\r\n              </Typography.Title>\r\n            </Col>\r\n            <Col span={10} style={{ textAlign: \"right\" }}>\r\n              <Typography.Text style={{ fontSize: 16 }}>\r\n                @{profile.handle}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={5} style={{ textTransform: \"capitalize\" }}>\r\n              {profile.status}\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"primary\">Follow</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(User);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"./Elements/Container\";\r\nimport { Card, List } from \"antd\";\r\nimport { getAllProfiles } from \"../actions\";\r\nimport User from \"./Elements/User\";\r\n\r\nconst UsersList = () => {\r\n  const [profileList, setProfileList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getAllProfiles();\r\n      setProfileList(response.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Card title=\"Users\">\r\n        <List>\r\n          {profileList.map(profile => (\r\n            <List.Item key={profile._id}>\r\n              <User profile={profile} />\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport { Card, Row, Col, Icon, Typography, Button } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst PeopleListItem = ({ user, history, bText }) => {\r\n  const onItemClick = () => {\r\n    return history.push(`/profile/${user.user}`);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <Row type=\"flex\" align=\"middle\">\r\n        <Col\r\n          span={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={onItemClick}\r\n        >\r\n          <Icon type=\"user\" style={{ fontSize: 24 }} />\r\n        </Col>\r\n        <Col span={20}>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col span={10} onClick={onItemClick} style={{ cursor: \"pointer\" }}>\r\n              <Typography.Title style={{ fontSize: 24 }}>\r\n                {user.name}\r\n              </Typography.Title>\r\n            </Col>\r\n            <Row type=\"flex\" gutter={10}>\r\n              {bText.first ? (\r\n                <Col span={12}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={() => bText.firstOnClick(user.user)}\r\n                  >\r\n                    {bText.first}\r\n                  </Button>\r\n                </Col>\r\n              ) : null}\r\n              {bText.second ? (\r\n                <Col span={12}>\r\n                  <Button\r\n                    type=\"danger\"\r\n                    size=\"large\"\r\n                    onClick={() => bText.secondOnClick(user.user)}\r\n                  >\r\n                    {bText.second}\r\n                  </Button>\r\n                </Col>\r\n              ) : null}\r\n            </Row>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(PeopleListItem);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, List, message } from \"antd\";\r\nimport {\r\n  getSentRequestsList,\r\n  getReceivedRequestsList,\r\n  getConnectedList,\r\n  acceptRequest,\r\n  ignoreRequest,\r\n  cancelRequest\r\n} from \"../../actions\";\r\nimport PeopleListItem from \"./PeopleListItem\";\r\n\r\nconst PeopleList = ({ type }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [bText, setButtonText] = useState({});\r\n  const [list, setList] = useState([]);\r\n  const [refresh, setRefresh] = useState(true);\r\n\r\n  const onAcceptClick = async id => {\r\n    try {\r\n      await acceptRequest(id);\r\n      message.success(\"You both are now connected\");\r\n      setRefresh(true);\r\n    } catch (err) {\r\n      message.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const onIgnoreClick = async id => {\r\n    try {\r\n      await ignoreRequest(id);\r\n      message.success(\"Request ignored\");\r\n      setRefresh(true);\r\n    } catch (err) {\r\n      message.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const onUnsendClick = async id => {\r\n    try {\r\n      await cancelRequest(id);\r\n      message.success(\"Request unsent successfully\");\r\n      setRefresh(true);\r\n    } catch (err) {\r\n      message.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = null;\r\n      try {\r\n        switch (type) {\r\n          case \"sent\":\r\n            response = await getSentRequestsList();\r\n            setList(response.data);\r\n            setButtonText({\r\n              first: \"Unsend\",\r\n              firstOnClick: onUnsendClick\r\n            });\r\n            break;\r\n          case \"incoming\":\r\n            response = await getReceivedRequestsList();\r\n            setList(response.data);\r\n            setButtonText({\r\n              first: \"Accept\",\r\n              second: \"Ignore\",\r\n              firstOnClick: onAcceptClick,\r\n              secondOnClick: onIgnoreClick\r\n            });\r\n            break;\r\n          case \"connections\":\r\n            response = await getConnectedList();\r\n            setList(response.data);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(\"Something went wrong\");\r\n      }\r\n    };\r\n    if (refresh) {\r\n      fetchData();\r\n      setRefresh(false);\r\n    }\r\n  }, [type, refresh]);\r\n\r\n  return (\r\n    <Card loading={loading}>\r\n      <List>\r\n        {list.map(user => (\r\n          <List.Item key={user._id}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <PeopleListItem user={user} bText={bText} />\r\n            </div>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PeopleList;\r\n","import React from \"react\";\r\nimport { Card, Tabs } from \"antd\";\r\nimport PeopleList from \"./Elements/PeopleList\";\r\nimport Container from \"./Elements/Container\";\r\n\r\nconst ManageConnections = () => {\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Tabs>\r\n          <Tabs.TabPane tab=\"Sent requests\" key=\"sent\">\r\n            <PeopleList type=\"sent\" />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Connections\" key=\"connections\">\r\n            <PeopleList type=\"connections\" />\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Incoming requests\" key=\"incoming\">\r\n            <PeopleList type=\"incoming\" />\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageConnections;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Home from \"../Home\";\r\nimport Dashboard from \"../Dashboard.jsx\";\r\nimport Register from \"../Register\";\r\nimport CreateProfile from \"../CreateProfile\";\r\nimport Navbar from \"../Elements/Navbar\";\r\nimport UsersList from \"../UsersList\";\r\nimport ViewProfile from \"../ViewProfile\";\r\nimport ManageConnections from \"../ManageConnections\";\r\n\r\nconst PrivateRoute = ({ path, component: Component, user, ...props }) => {\r\n  if (user)\r\n    return (\r\n      <Route\r\n        {...props}\r\n        to={path}\r\n        render={() => (\r\n          <>\r\n            <Navbar />\r\n            <Component {...props} user={user} />\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst Routing = () => {\r\n  const user = useSelector(state => state.auth.user);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/register\" exact component={Register} />\r\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} user={user} />\r\n        <PrivateRoute\r\n          path=\"/create-profile\"\r\n          component={CreateProfile}\r\n          user={user}\r\n        />\r\n        <PrivateRoute path=\"/users\" component={UsersList} user={user} />\r\n        <PrivateRoute\r\n          path=\"/profile/:userId\"\r\n          component={ViewProfile}\r\n          user={user}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/connections\"\r\n          component={ManageConnections}\r\n          user={user}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Routing from \"./HOC/Routing\";\r\nimport { getUser, setUser } from \"../actions\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const data = await getUser();\r\n      if (data.user) {\r\n        await dispatch(setUser(data.user));\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [dispatch]);\r\n\r\n  return loading ? null : <Routing />;\r\n};\r\n\r\nexport default App;\r\n","import * as ACTION_TYPE from \"../actions/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.SET_USER:\r\n      return { ...state, user: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ACTION_TYPE from \"../actions/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  refresh: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.SET_REFRESH_POSTS:\r\n      return {\r\n        ...state,\r\n        refresh: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport refreshReducer from \"./refreshReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  refresh: refreshReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}